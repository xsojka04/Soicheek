@page "/Admin/Post/Edit/{PostID:int}"
@rendermode InteractiveServer

@using Soicheek.BL.ViewModels.Post
@using Soicheek.BL.ViewModels.Blog
@inject PostService PostService
@inject BlogService BlogService
@inject NavigationManager NavigationManager

<PageTitle>Admin</PageTitle>

<style>
    .img-section1 {
        background-image: url('images/img-coffee.jpg');
        background-position: 90% 30%;
    }
</style>

<section class="container-fluid py-5 img-section-secondary img-section1">
    <div class="container text-center py-5">
        <h1>Správa příspěvku</h1>
    </div>
</section>



<section class="container-fluid py-5">
    <div class="container text-center py-5">
        @if (Post is null)
        {
            <p>
                Požadovaný příspěvek se nepodařilo najít.
            </p>
        }
        else
        {
            <div class="row justify-content-center">
                <div class="col-12">
                    <EditForm Model="Post" method="post" OnValidSubmit="EditPost" FormName="EditPost">
                        <DataAnnotationsValidator />
                        <div class="form-floating mb-3">
                            <InputSelect class="form-select" @bind-Value="Post.BlogID" aria-required="true" placeholder="blogID">
                                @foreach (var blog in Blogs)
                                {
                                    <option value="@blog.BlogID">@blog.Name</option>
                                }
                            </InputSelect>
                            <label for="blogID" class="form-label">Blog</label>
                            <ValidationMessage For="() => Post.BlogID" class="text-danger" />
                        </div>
                        <div class="form-floating mb-3">
                            <InputText type="text" @bind-Value="Post.Title" class="form-control" aria-required="true" placeholder="title" />
                            <label for="title" class="form-label">Titulek</label>
                            <ValidationMessage For="() => Post.Title" class="text-danger" />
                        </div>
                        <div class="form-floating mb-3">
                            <InputTextArea @bind-Value="Post.Content" class="form-control" style="height: 300px" aria-required="true" placeholder="content"></InputTextArea>
                            <label for="content" class="form-label">Text</label>
                            <ValidationMessage For="() => Post.Content" class="text-danger" />
                        </div>
                        <button type="submit" class="w-100 btn btn-lg btn-primary">Upravit příspěvek</button>
                        <Soicheek.Components.Admin.Shared.DeletePostButton BlogID="@OriginBlogId" PostID="@Post.PostID" />
                    </EditForm>
                </div>
            </div>
        }
    </div>
</section>

@code {
    [Parameter]
    public int PostID { get; set; }

    [SupplyParameterFromForm]
    private PostVM? Post { get; set; } = null;

    private List<BlogVM> Blogs { get; set; } = new List<BlogVM>();

    private int OriginBlogId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Post = await PostService.GetByIdAsync(PostID);
        Blogs = await BlogService.GetAllAsync();
        Blogs.OrderBy(x => x.Name).ToList();
        OriginBlogId = Post?.BlogID ?? -1;
    }

    public async Task EditPost()
    {
        if (Post is not null)
        {
            await PostService.UpdateAsync(Post);
            NavigationManager.NavigateTo($"/Admin/Blog/Edit/{OriginBlogId}");
        }
    }
}

